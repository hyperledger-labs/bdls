// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gossip.proto

package agent

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// CommandType defines supported commands
type CommandType int32

const (
	CommandType_NOP                      CommandType = 0
	CommandType_KEY_AUTH_INIT            CommandType = 1
	CommandType_KEY_AUTH_CHALLENGE       CommandType = 2
	CommandType_KEY_AUTH_CHALLENGE_REPLY CommandType = 3
	CommandType_CONSENSUS                CommandType = 4
)

var CommandType_name = map[int32]string{
	0: "NOP",
	1: "KEY_AUTH_INIT",
	2: "KEY_AUTH_CHALLENGE",
	3: "KEY_AUTH_CHALLENGE_REPLY",
	4: "CONSENSUS",
}

var CommandType_value = map[string]int32{
	"NOP":                      0,
	"KEY_AUTH_INIT":            1,
	"KEY_AUTH_CHALLENGE":       2,
	"KEY_AUTH_CHALLENGE_REPLY": 3,
	"CONSENSUS":                4,
}

func (x CommandType) String() string {
	return proto.EnumName(CommandType_name, int32(x))
}

func (CommandType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_878fa4887b90140c, []int{0}
}

// Gossip defines a stream based protocol
type Gossip struct {
	Command              CommandType `protobuf:"varint,1,opt,name=Command,proto3,enum=agent.CommandType" json:"Command,omitempty"`
	Message              []byte      `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Gossip) Reset()         { *m = Gossip{} }
func (m *Gossip) String() string { return proto.CompactTextString(m) }
func (*Gossip) ProtoMessage()    {}
func (*Gossip) Descriptor() ([]byte, []int) {
	return fileDescriptor_878fa4887b90140c, []int{0}
}

func (m *Gossip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Gossip.Unmarshal(m, b)
}
func (m *Gossip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Gossip.Marshal(b, m, deterministic)
}
func (m *Gossip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Gossip.Merge(m, src)
}
func (m *Gossip) XXX_Size() int {
	return xxx_messageInfo_Gossip.Size(m)
}
func (m *Gossip) XXX_DiscardUnknown() {
	xxx_messageInfo_Gossip.DiscardUnknown(m)
}

var xxx_messageInfo_Gossip proto.InternalMessageInfo

func (m *Gossip) GetCommand() CommandType {
	if m != nil {
		return m.Command
	}
	return CommandType_NOP
}

func (m *Gossip) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

type KeyAuthInit struct {
	// client public key
	X                    []byte   `protobuf:"bytes,1,opt,name=X,proto3" json:"X,omitempty"`
	Y                    []byte   `protobuf:"bytes,2,opt,name=Y,proto3" json:"Y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyAuthInit) Reset()         { *m = KeyAuthInit{} }
func (m *KeyAuthInit) String() string { return proto.CompactTextString(m) }
func (*KeyAuthInit) ProtoMessage()    {}
func (*KeyAuthInit) Descriptor() ([]byte, []int) {
	return fileDescriptor_878fa4887b90140c, []int{1}
}

func (m *KeyAuthInit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyAuthInit.Unmarshal(m, b)
}
func (m *KeyAuthInit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyAuthInit.Marshal(b, m, deterministic)
}
func (m *KeyAuthInit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyAuthInit.Merge(m, src)
}
func (m *KeyAuthInit) XXX_Size() int {
	return xxx_messageInfo_KeyAuthInit.Size(m)
}
func (m *KeyAuthInit) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyAuthInit.DiscardUnknown(m)
}

var xxx_messageInfo_KeyAuthInit proto.InternalMessageInfo

func (m *KeyAuthInit) GetX() []byte {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *KeyAuthInit) GetY() []byte {
	if m != nil {
		return m.Y
	}
	return nil
}

type KeyAuthChallenge struct {
	// server ephermal publickey for client authentication
	X []byte `protobuf:"bytes,1,opt,name=X,proto3" json:"X,omitempty"`
	Y []byte `protobuf:"bytes,2,opt,name=Y,proto3" json:"Y,omitempty"`
	// the challenge message, the peer can create the correct HMAC with this message
	Challenge            []byte   `protobuf:"bytes,3,opt,name=Challenge,proto3" json:"Challenge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyAuthChallenge) Reset()         { *m = KeyAuthChallenge{} }
func (m *KeyAuthChallenge) String() string { return proto.CompactTextString(m) }
func (*KeyAuthChallenge) ProtoMessage()    {}
func (*KeyAuthChallenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_878fa4887b90140c, []int{2}
}

func (m *KeyAuthChallenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyAuthChallenge.Unmarshal(m, b)
}
func (m *KeyAuthChallenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyAuthChallenge.Marshal(b, m, deterministic)
}
func (m *KeyAuthChallenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyAuthChallenge.Merge(m, src)
}
func (m *KeyAuthChallenge) XXX_Size() int {
	return xxx_messageInfo_KeyAuthChallenge.Size(m)
}
func (m *KeyAuthChallenge) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyAuthChallenge.DiscardUnknown(m)
}

var xxx_messageInfo_KeyAuthChallenge proto.InternalMessageInfo

func (m *KeyAuthChallenge) GetX() []byte {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *KeyAuthChallenge) GetY() []byte {
	if m != nil {
		return m.Y
	}
	return nil
}

func (m *KeyAuthChallenge) GetChallenge() []byte {
	if m != nil {
		return m.Challenge
	}
	return nil
}

type KeyAuthChallengeReply struct {
	HMAC                 []byte   `protobuf:"bytes,1,opt,name=HMAC,proto3" json:"HMAC,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyAuthChallengeReply) Reset()         { *m = KeyAuthChallengeReply{} }
func (m *KeyAuthChallengeReply) String() string { return proto.CompactTextString(m) }
func (*KeyAuthChallengeReply) ProtoMessage()    {}
func (*KeyAuthChallengeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_878fa4887b90140c, []int{3}
}

func (m *KeyAuthChallengeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyAuthChallengeReply.Unmarshal(m, b)
}
func (m *KeyAuthChallengeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyAuthChallengeReply.Marshal(b, m, deterministic)
}
func (m *KeyAuthChallengeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyAuthChallengeReply.Merge(m, src)
}
func (m *KeyAuthChallengeReply) XXX_Size() int {
	return xxx_messageInfo_KeyAuthChallengeReply.Size(m)
}
func (m *KeyAuthChallengeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyAuthChallengeReply.DiscardUnknown(m)
}

var xxx_messageInfo_KeyAuthChallengeReply proto.InternalMessageInfo

func (m *KeyAuthChallengeReply) GetHMAC() []byte {
	if m != nil {
		return m.HMAC
	}
	return nil
}

func init() {
	proto.RegisterEnum("agent.CommandType", CommandType_name, CommandType_value)
	proto.RegisterType((*Gossip)(nil), "agent.Gossip")
	proto.RegisterType((*KeyAuthInit)(nil), "agent.KeyAuthInit")
	proto.RegisterType((*KeyAuthChallenge)(nil), "agent.KeyAuthChallenge")
	proto.RegisterType((*KeyAuthChallengeReply)(nil), "agent.KeyAuthChallengeReply")
}

func init() { proto.RegisterFile("gossip.proto", fileDescriptor_878fa4887b90140c) }

var fileDescriptor_878fa4887b90140c = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x4d, 0x6b, 0x83, 0x40,
	0x10, 0x86, 0xbb, 0x31, 0x8d, 0x64, 0x62, 0xca, 0x76, 0xa0, 0xc5, 0x43, 0x0e, 0xc1, 0x53, 0xfa,
	0x81, 0x87, 0xf6, 0x17, 0x88, 0x48, 0x94, 0x98, 0x8d, 0xac, 0x06, 0xe2, 0x49, 0x2c, 0x5d, 0x4c,
	0xc0, 0xac, 0x52, 0xed, 0xc1, 0x7f, 0x5f, 0xba, 0x98, 0xb4, 0xb4, 0x90, 0xdb, 0xbc, 0x0f, 0xcf,
	0xbc, 0x30, 0x03, 0x46, 0x51, 0x35, 0xcd, 0xa1, 0xb6, 0xeb, 0x8f, 0xaa, 0xad, 0xf0, 0x3a, 0x2f,
	0x84, 0x6c, 0xad, 0x08, 0x46, 0x4b, 0x85, 0xf1, 0x19, 0x74, 0xb7, 0x3a, 0x1e, 0x73, 0xf9, 0x6e,
	0x92, 0x39, 0x59, 0xdc, 0xbc, 0xa0, 0xad, 0x14, 0xbb, 0xa7, 0x49, 0x57, 0x0b, 0x7e, 0x52, 0xd0,
	0x04, 0x7d, 0x2d, 0x9a, 0x26, 0x2f, 0x84, 0x39, 0x98, 0x93, 0x85, 0xc1, 0x4f, 0xd1, 0x7a, 0x80,
	0xc9, 0x4a, 0x74, 0xce, 0x67, 0xbb, 0x0f, 0xe4, 0xa1, 0x45, 0x03, 0xc8, 0x4e, 0x15, 0x1a, 0x9c,
	0xec, 0xbe, 0x53, 0xda, 0x2f, 0x90, 0xd4, 0x0a, 0x81, 0xf6, 0xaa, 0xbb, 0xcf, 0xcb, 0x52, 0xc8,
	0x42, 0x5c, 0xf2, 0x71, 0x06, 0xe3, 0xb3, 0x68, 0x6a, 0x8a, 0xfe, 0x00, 0xeb, 0x09, 0xee, 0xfe,
	0xb6, 0x71, 0x51, 0x97, 0x1d, 0x22, 0x0c, 0xfd, 0xb5, 0xe3, 0xf6, 0xad, 0x6a, 0x7e, 0x94, 0x30,
	0xf9, 0x75, 0x17, 0xea, 0xa0, 0xb1, 0x4d, 0x44, 0xaf, 0xf0, 0x16, 0xa6, 0x2b, 0x2f, 0xcd, 0x9c,
	0x6d, 0xe2, 0x67, 0x01, 0x0b, 0x12, 0x4a, 0xf0, 0x1e, 0xf0, 0x8c, 0x5c, 0xdf, 0x09, 0x43, 0x8f,
	0x2d, 0x3d, 0x3a, 0xc0, 0x19, 0x98, 0xff, 0x79, 0xc6, 0xbd, 0x28, 0x4c, 0xa9, 0x86, 0x53, 0x18,
	0xbb, 0x1b, 0x16, 0x7b, 0x2c, 0xde, 0xc6, 0x74, 0xf8, 0x36, 0x52, 0x5f, 0x7f, 0xfd, 0x0a, 0x00,
	0x00, 0xff, 0xff, 0x78, 0x52, 0x2e, 0xab, 0x85, 0x01, 0x00, 0x00,
}
